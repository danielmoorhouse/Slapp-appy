@model SlappMain.Models.Review

@{
    ViewBag.Title = "Create";
}
<script type="text/javascript">
    $(document).ready(function () {
        $('.Rating').barrating({
            theme: 'fontawesome-stars'
        });
    });
</script>

<h2>Review - @ViewBag.AppName</h2>

<hr />
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-left: 20%;">
     
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <h4 class="indhead">
                @Html.LabelFor(model => model.AppId,
 htmlAttributes: new { @class = "control-label col-md-2" })
            </h4>
            <div class="col-md-10">
                <input type="hidden" name="AppId" value="@ViewBag.AppId" />
                <h4> @ViewBag.AppName</h4>
            </div>
        </div>

        <div class="form-group">
            <h4 class="indhead"> @Html.LabelFor(model => model.RevUname, htmlAttributes: new { @class = "control-label col-md-2" })</h4>
            <div class="col-md-10">
                <h2>
                    @Html.EditorFor(model => model.RevUname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RevUname, "", new { @class = "text-danger" })
                </h2>
            </div>
        </div>

        <div class="form-group">
            <h4 class="indhead">
                @Html.LabelFor(model => model.ReviewContent, htmlAttributes: new { @class = "control-label col-md-2" })</h4>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReviewContent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReviewContent, "", new { @class = "text-danger" })
                </div>
</div>

        <div class="form-group">
            <h4 class="indhead">
                @Html.LabelFor(model => model.ReviewRating,
  htmlAttributes: new { @class = "control-label col-md-2" })</h4>
                <div class="col-md-10">
                    <select class="Rating" name="ReviewRating">
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                    </select>

                    @Html.ValidationMessageFor(model => model.ReviewRating, "", new { @class = "text-danger" })
                </div>
</div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default revs" />
            </div>
        </div>
    </div>

}

<div>
  <button class="btn btn-default revs">  @Html.ActionLink("Back to List", "Index")</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
